{"ast":null,"code":"var _jsxFileName = \"/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2_Public/evolveU-c6-p2/client/src/components/ListingForm/NewListing.js\";\nimport React, { useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../Shared/components/context/auth-context';\nimport UseFormNewListing from './UseFormNewListing';\nimport Card from '../../Shared/components/UIElements/Card'; // import ImageUpload from '../../Shared/components/FormElements/ImageUpload';\n\nimport './NewListing.css';\n\nconst NewListing = ({\n  submitForm\n}) => {\n  const auth = useContext(AuthContext);\n  const [saveError, setSaveError] = useState();\n  const userId = useParams();\n  const userIdString = userId.id;\n  const history = useHistory();\n\n  const onSave = async newListing => {\n    try {\n      const response = await fetch('/api/listings/create_listing', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newListing)\n      });\n      console.log('Create response is', response);\n\n      if (response.status === 500) {\n        let errorMessage = await response.text();\n        console.log('We had an error.  it was: ', errorMessage);\n        setSaveError(errorMessage);\n      } else {\n        setSaveError(undefined);\n        history.push(`/user_profile/${userIdString}`);\n      }\n    } catch (error) {\n      console.error('Fetch failed to reach the server.');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UseFormNewListing, {\n    onSave: onSave,\n    saveError: saveError,\n    saveButtonCaption: \"Add Listing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default NewListing;","map":{"version":3,"sources":["/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2_Public/evolveU-c6-p2/client/src/components/ListingForm/NewListing.js"],"names":["React","useState","useContext","useParams","useHistory","AuthContext","UseFormNewListing","Card","NewListing","submitForm","auth","saveError","setSaveError","userId","userIdString","id","history","onSave","newListing","response","fetch","method","headers","body","JSON","stringify","console","log","status","errorMessage","text","undefined","push","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAAQC,WAAR,QAA0B,8CAA1B;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,IAAP,MAAiB,yCAAjB,C,CAEA;;AAEA,OAAO,kBAAP;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACrC,QAAMC,IAAI,GAAGR,UAAU,CAACG,WAAD,CAAvB;AAEA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,EAA1C;AAEA,QAAMY,MAAM,GAAGV,SAAS,EAAxB;AAEA,QAAMW,YAAY,GAAGD,MAAM,CAACE,EAA5B;AAEA,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;;AAEA,QAAMa,MAAM,GAAG,MAAOC,UAAP,IAAsB;AACnC,QAAG;AACD,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACzDC,QAAAA,MAAM,EAAE,MADiD;AAEzDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFgD;AAKzDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,UAAf;AALmD,OAAjC,CAA5B;AAQAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCR,QAAlC;;AACM,UAAIA,QAAQ,CAACS,MAAT,KAAoB,GAAxB,EAA6B;AACzB,YAAIC,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAT,EAAzB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CE,YAA1C;AACAjB,QAAAA,YAAY,CAACiB,YAAD,CAAZ;AACH,OAJD,MAKK;AACDjB,QAAAA,YAAY,CAACmB,SAAD,CAAZ;AACAf,QAAAA,OAAO,CAACgB,IAAR,CAAc,iBAAgBlB,YAAa,EAA3C;AAEP;AACF,KApBH,CAoBI,OAAOmB,KAAP,EAAc;AACVP,MAAAA,OAAO,CAACO,KAAR,CAAc,mCAAd;AACH;AACN,GAxBD;;AA0BA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,iBAAD;AACI,IAAA,MAAM,EAAEhB,MADZ;AAEI,IAAA,SAAS,EAAEN,SAFf;AAGI,IAAA,iBAAiB,EAAC,aAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AASD,CA9CD;;AAgDA,eAAeH,UAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {AuthContext} from '../../Shared/components/context/auth-context'\n\nimport UseFormNewListing from './UseFormNewListing';\nimport Card from '../../Shared/components/UIElements/Card';\n\n// import ImageUpload from '../../Shared/components/FormElements/ImageUpload';\n\nimport './NewListing.css';\n\n\nconst NewListing = ({ submitForm }) => {\n  const auth = useContext(AuthContext);\n\n  const [saveError, setSaveError] = useState()\n\n  const userId = useParams();\n\n  const userIdString = userId.id;\n  \n  const history = useHistory()\n  \n  const onSave = async (newListing) => {\n    try{\n      const response = await fetch('/api/listings/create_listing', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n        },\n          body: JSON.stringify(newListing)\n      })\n\n      console.log('Create response is', response)\n            if (response.status === 500) {\n                let errorMessage = await response.text()\n                console.log('We had an error.  it was: ', errorMessage)\n                setSaveError(errorMessage)\n            }\n            else {\n                setSaveError(undefined)\n                history.push(`/user_profile/${userIdString}`)\n            \n        }\n      } catch (error) {\n            console.error('Fetch failed to reach the server.')\n        }\n  }\n\n  return (\n    <Card>\n    <UseFormNewListing \n        onSave={onSave} \n        saveError={saveError} \n        saveButtonCaption=\"Add Listing\"\n    />\n    </Card>\n)\n}\n\nexport default NewListing;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2_Public/evolveU-c6-p2/client/src/Shared/components/FormElements/Input.js\";\nimport React, { useReducer, useEffect } from \"react\";\nimport { validate } from \"../../../components/util/validators\";\nimport ListingCategories from \"./ListingCategories\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return { ...state,\n        //copies the old state object and all key:value pairs of the old object into this new object\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case \"TOUCH\":\n      {\n        return { ...state,\n          isTouched: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    //the first argument is an action and the second argument is the initial state, which is optional\n    value: \"\",\n    isTouched: false,\n    isValid: false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\"\n    });\n  };\n\n  const element = () => {\n    if (props.element === \"input\") {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-input\",\n        id: props.id,\n        type: props.type,\n        placeholder: props.placeholder,\n        onChange: changeHandler,\n        onBlur: touchHandler,\n        value: inputState.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      });\n    } else if (props.element === \"select\") {\n      return /*#__PURE__*/React.createElement(\"select\", {\n        className: \"form-input\",\n        id: props.id,\n        type: props.type,\n        onChange: changeHandler // onBlur={touchHandler}\n        ,\n        value: inputState.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ListingCategories, {\n        id: \"paper\",\n        displayedCategory: \"Paper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ListingCategories, {\n        id: \"plastic\",\n        displayedCategory: \"Plastic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ListingCategories, {\n        id: \"electronic\",\n        displayedCategory: \"Electronic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ListingCategories, {\n        id: \"glass\",\n        displayedCategory: \"Glass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ListingCategories, {\n        id: \"metal\",\n        displayedCategory: \"Metal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ListingCategories, {\n        id: \"furniture\",\n        displayedCategory: \"Furniture\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ListingCategories, {\n        id: \"textile\",\n        displayedCategory: \"Textile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ListingCategories, {\n        id: \"recyclabes\",\n        displayedCategory: \"Recyclables\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ListingCategories, {\n        id: \"other\",\n        displayedCategory: \"Other\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"form-input\",\n        id: props.id,\n        rows: props.rows || 3,\n        onChange: changeHandler,\n        onBlur: touchHandler,\n        value: inputState.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, props.label), element(), !inputState.isValid && inputState.isTouched && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 55\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2_Public/evolveU-c6-p2/client/src/Shared/components/FormElements/Input.js"],"names":["React","useReducer","useEffect","validate","ListingCategories","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","rows","label","errorText"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from \"../../../components/util/validators\";\nimport ListingCategories from \"./ListingCategories\";\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state, //copies the old state object and all key:value pairs of the old object into this new object\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    //the first argument is an action and the second argument is the initial state, which is optional\n    value: \"\",\n    isTouched: false,\n    isValid: false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n\n  const element = () => {\n    if (props.element === \"input\") {\n      return (\n        <input\n          className=\"form-input\"\n          id={props.id}\n          type={props.type}\n          placeholder={props.placeholder}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n        />\n      );\n    } else if (props.element === \"select\") {\n      return (\n        <select\n          className=\"form-input\"\n          id={props.id}\n          type={props.type}\n          onChange={changeHandler}\n          // onBlur={touchHandler}\n          value={inputState.value}\n        >\n          <ListingCategories id=\"paper\" displayedCategory=\"Paper\" />\n          <ListingCategories id=\"plastic\" displayedCategory=\"Plastic\" />\n          <ListingCategories id=\"electronic\" displayedCategory=\"Electronic\" />\n          <ListingCategories id=\"glass\" displayedCategory=\"Glass\" />\n          <ListingCategories id=\"metal\" displayedCategory=\"Metal\" />\n          <ListingCategories id=\"furniture\" displayedCategory=\"Furniture\" />\n          <ListingCategories id=\"textile\" displayedCategory=\"Textile\" />\n          <ListingCategories id=\"recyclabes\" displayedCategory=\"Recyclables\" />\n          <ListingCategories id=\"other\" displayedCategory=\"Other\" />\n        </select>\n      );\n    } else {\n      return (\n        <textarea\n          className=\"form-input\"\n          id={props.id}\n          rows={props.rows || 3}\n          onChange={changeHandler}\n          onBlur={touchHandler}\n          value={inputState.value}\n        />\n      );\n    }\n  };\n\n  return (\n    <div className=\"form-inputs\">\n      <label htmlFor={props.id}>{props.label}</label>\n      {element()}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}
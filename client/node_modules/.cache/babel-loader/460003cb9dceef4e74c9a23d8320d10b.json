{"ast":null,"code":"var _jsxFileName = \"/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2/evolveu-c6-project-02/client/src/Pages/UserListings.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Card from \"../Shared/components/UIElements/Card\";\n\nconst UserListings = () => {\n  const [loadedUsers, setLoadedUsers] = useState([]);\n  const [loadedListings, setLoadedListings] = useState([]);\n  const userId = useParams();\n  const userIdString = userId.id; //   console.log(\"userid:\", userId.id)\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        let receivedData = await fetch(`/api/users/${userIdString}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        let responseData = await receivedData.json();\n        setLoadedUsers(responseData.user);\n        console.log(\"loadedUsers:\", loadedUsers);\n      } catch (err) {\n        console.log(\"error:\", err);\n      }\n    };\n\n    fetchUsers();\n  }, [userId]);\n  useEffect(() => {\n    const fetchListings = async () => {\n      try {\n        let receivedListings = await fetch(`/api/listings/user/${loadedUsers.id}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        let responseListings = await receivedListings.json();\n        console.log(\"responseListings:\", responseListings); // setLoadedListings(responseListings.listings);\n        // console.log(\"loadedListings:\", loadedListings);\n\n        const obj1 = responseListings.listings.forEach(i => {\n          return /*#__PURE__*/React.createElement(Card, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }\n          }, \"Category: \", i.category), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }\n          }, \"Title: \", i.title), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }\n          }, \"Image: \", i.image), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }\n          }, \"Description: \", i.description), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }\n          }, \"Quantity: \", i.quantity), /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }\n          }, \"Location: \", i.location));\n        });\n      } catch (err) {\n        console.log(\"error:\", err);\n      }\n    };\n\n    fetchListings();\n  }, [loadedUsers]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \" All listings from \", loadedUsers.username), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-profile-wrap-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Username: \", loadedUsers.username, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Email: \", loadedUsers.email, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, \"Image: \", loadedUsers.image, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Listings: \", obj1, \" \")))))));\n};\n\nexport default UserListings;","map":{"version":3,"sources":["/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2/evolveu-c6-project-02/client/src/Pages/UserListings.js"],"names":["React","useState","useEffect","useParams","Card","UserListings","loadedUsers","setLoadedUsers","loadedListings","setLoadedListings","userId","userIdString","id","fetchUsers","receivedData","fetch","method","headers","responseData","json","user","console","log","err","fetchListings","receivedListings","responseListings","obj1","listings","forEach","i","category","title","image","description","quantity","location","username","email"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport Card from \"../Shared/components/UIElements/Card\";\n\nconst UserListings = () => {\n  const [loadedUsers, setLoadedUsers] = useState([]);\n  const [loadedListings, setLoadedListings] = useState([]);\n\n  const userId = useParams();\n\n  const userIdString = userId.id;\n\n  //   console.log(\"userid:\", userId.id)\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        let receivedData = await fetch(`/api/users/${userIdString}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        let responseData = await receivedData.json();\n        setLoadedUsers(responseData.user);\n        console.log(\"loadedUsers:\", loadedUsers);\n      } catch (err) {\n        console.log(\"error:\", err);\n      }\n    };\n    fetchUsers();\n  }, [userId]);\n\n  useEffect(() => {\n    const fetchListings = async () => {\n      try {\n        let receivedListings = await fetch(\n          `/api/listings/user/${loadedUsers.id}`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        let responseListings = await receivedListings.json();\n        console.log(\"responseListings:\", responseListings);\n        // setLoadedListings(responseListings.listings);\n        // console.log(\"loadedListings:\", loadedListings);\n        const obj1 = responseListings.listings.forEach((i) => {\n          return (\n            <Card>\n              <div>Category: {i.category}</div>\n              <div>Title: {i.title}</div>\n              <div>Image: {i.image}</div>\n              <div>Description: {i.description}</div>\n              <div>Quantity: {i.quantity}</div>\n              <div>Location: {i.location}</div>\n            </Card>\n          );\n        });\n      } catch (err) {\n        console.log(\"error:\", err);\n      }\n    };\n    fetchListings();\n  }, [loadedUsers]);\n  \n\n  return (\n    <React.Fragment>\n      <div className=\"main-div\">\n        <div>\n          <h2 className=\"h2\"> All listings from {loadedUsers.username}</h2>\n          <div className=\"user-profile-wrap-div\">\n            <Card>\n              <div>\n                <div>Username: {loadedUsers.username} </div>\n                <div>Email: {loadedUsers.email} </div>\n                <div>Image: {loadedUsers.image} </div>\n                <div>Listings: {obj1} </div>\n              </div>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default UserListings;\n"]},"metadata":{},"sourceType":"module"}
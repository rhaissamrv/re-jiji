{"ast":null,"code":"var _jsxFileName = \"/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2/evolveu-c6-project-02/client/src/Pages/EditListingsPage.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../Shared/components/context/auth-context'; // import UseFormNewListing from '../components/ListingForm/UseFormNewListing';\n\nimport EditListingForm from '../components/EditAndDeleteListings/EditListingForm';\nimport Card from '../Shared/components/UIElements/Card'; // import './NewListing.css';\n\nconst EditListingsPage = () => {\n  const auth = useContext(AuthContext);\n  const [loading, setLoading] = useState();\n  const [loadedListing, setLoadedListing] = useState({});\n  const [saveError, setSaveError] = useState();\n  const [listingId, setListingId] = useState();\n  const itemId = useParams(); // const listingIdString = listingId.id;\n\n  console.log('LISTING_ID:', itemId);\n  const history = useHistory(); // useEffect(() => {\n  //   console.log('itemId:', itemId);\n  //   setListingId(itemId.id);\n  // }, [])\n\n  useEffect(async () => {\n    setLoading(true);\n\n    const fetchListings = async () => {\n      try {\n        let receivedListings = await fetch(`/api/listings/${itemId.id}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        let responseListings = await receivedListings.json();\n        console.log(\"responseListings:\", responseListings);\n        setLoadedListing(responseListings.listing);\n      } catch (err) {\n        console.log(\"error:\", err);\n      }\n\n      setLoading(false);\n    };\n\n    await fetchListings();\n  }, [listingId]);\n  console.log(\"loadedListing:\", loadedListing);\n\n  const onSave = async newListing => {\n    try {\n      const response = await fetch(`/api/listings/${itemId.id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newListing)\n      });\n      console.log('Edit response is', response);\n\n      if (response.status === 500) {\n        let errorMessage = await response.text();\n        console.log('We had an error.  it was: ', errorMessage);\n        setSaveError(errorMessage);\n      } else {\n        setSaveError(undefined);\n        history.push(`/user_profile/${loadedListing.userId}`);\n      }\n    } catch (error) {\n      console.error('Fetch failed to reach the server.');\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Card>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(EditListingForm, {\n      onSave: onSave,\n      saveError: saveError,\n      saveButtonCaption: \"Edit Listing\",\n      listing: loadedListing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    })) // </Card>\n\n  );\n};\n\nexport default EditListingsPage;","map":{"version":3,"sources":["/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2/evolveu-c6-project-02/client/src/Pages/EditListingsPage.js"],"names":["React","useEffect","useState","useContext","useParams","useHistory","AuthContext","EditListingForm","Card","EditListingsPage","auth","loading","setLoading","loadedListing","setLoadedListing","saveError","setSaveError","listingId","setListingId","itemId","console","log","history","fetchListings","receivedListings","fetch","id","method","headers","responseListings","json","listing","err","onSave","newListing","response","body","JSON","stringify","status","errorMessage","text","undefined","push","userId","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {AuthContext} from '../Shared/components/context/auth-context'\n// import UseFormNewListing from '../components/ListingForm/UseFormNewListing';\nimport EditListingForm from '../components/EditAndDeleteListings/EditListingForm'\nimport Card from '../Shared/components/UIElements/Card';\n\n// import './NewListing.css';\n\nconst EditListingsPage = () => {\n\n    const auth = useContext(AuthContext);\n\n    const [loading, setLoading] = useState();\n    \n    const [loadedListing, setLoadedListing]= useState({});\n\n    const [saveError, setSaveError] = useState()\n\n    const [listingId, setListingId] = useState()\n  \n    \n    const itemId = useParams();\n    // const listingIdString = listingId.id;\n    console.log('LISTING_ID:', itemId)\n    \n    const history = useHistory()\n    \n    // useEffect(() => {\n    //   console.log('itemId:', itemId);\n    //   setListingId(itemId.id);\n\n    // }, [])\n    useEffect(async () => {\n        setLoading(true);\n        const fetchListings = async () => {\n          try {\n            let receivedListings = await fetch(\n              `/api/listings/${itemId.id}`,\n              {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n              }\n            );\n            let responseListings = await receivedListings.json();\n            console.log(\"responseListings:\", responseListings)\n            setLoadedListing(responseListings.listing);\n          } catch (err) {\n            console.log(\"error:\", err);\n          }\n          setLoading(false);\n        };\n        await fetchListings();\n      }, [listingId]);\n    \n      console.log(\"loadedListing:\", loadedListing)\n\n    \n    const onSave = async (newListing) => {\n      try{\n        const response = await fetch(`/api/listings/${itemId.id}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n          },\n            body: JSON.stringify(newListing)\n        })\n  \n        console.log('Edit response is', response)\n              if (response.status === 500) {\n                  let errorMessage = await response.text()\n                  console.log('We had an error.  it was: ', errorMessage)\n                  setSaveError(errorMessage)\n              }\n              else {\n                  setSaveError(undefined)\n                  history.push(`/user_profile/${loadedListing.userId}`)\n              \n          }\n        } catch (error) {\n              console.error('Fetch failed to reach the server.')\n          }\n    }\n  \n    return (\n      // <Card>\n      <div>\n      <EditListingForm \n          onSave={onSave} \n          saveError={saveError} \n          saveButtonCaption=\"Edit Listing\"\n          listing={loadedListing}\n      />\n      </div>\n      // </Card>\n  )\n\n}\nexport default EditListingsPage;"]},"metadata":{},"sourceType":"module"}
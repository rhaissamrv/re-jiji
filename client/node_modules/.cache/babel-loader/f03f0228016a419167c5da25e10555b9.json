{"ast":null,"code":"var _jsxFileName = \"/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2/evolveu-c6-project-02/client/src/Pages/EditableUserListings.js\";\nimport React, { useState, useEffect } from 'react';\nimport Card from \"../Shared/components/UIElements/Card\";\nimport { useParams } from \"react-router-dom\";\nimport ListingsByUserId from \"./ListingsByUserId\"; // import \n\nconst EditableUserListings = () => {\n  const [loadedUsers, setLoadedUsers] = useState([]);\n  const userId = useParams();\n  const userIdString = userId.id;\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        let receivedData = await fetch(`/api/users/${userIdString}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        let responseData = await receivedData.json();\n        setLoadedUsers(responseData.user);\n      } catch (err) {\n        console.log(\"error:\", err);\n      }\n\n      console.log(\"loadedUsers:\", loadedUsers);\n    };\n\n    fetchUsers();\n  }, [userId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListingsByUserId, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default EditableUserListings;","map":{"version":3,"sources":["/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2/evolveu-c6-project-02/client/src/Pages/EditableUserListings.js"],"names":["React","useState","useEffect","Card","useParams","ListingsByUserId","EditableUserListings","loadedUsers","setLoadedUsers","userId","userIdString","id","fetchUsers","receivedData","fetch","method","headers","responseData","json","user","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sCAAjB;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B,C,CACA;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAE/B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMQ,MAAM,GAAGL,SAAS,EAAxB;AAEA,QAAMM,YAAY,GAAGD,MAAM,CAACE,EAA5B;AAEAT,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMU,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,YAAIC,YAAY,GAAG,MAAMC,KAAK,CAAE,cAAaJ,YAAa,EAA5B,EAC9B;AACEK,UAAAA,MAAM,EAAE,KADV;AAEIC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAFb,SAD8B,CAA9B;AAOA,YAAIC,YAAY,GAAG,MAAMJ,YAAY,CAACK,IAAb,EAAzB;AACAV,QAAAA,cAAc,CAACS,YAAY,CAACE,IAAd,CAAd;AACH,OAVC,CAUA,OAAOC,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Bf,WAA5B;AACC,KAfD;;AAgBAK,IAAAA,UAAU;AACX,GAnBQ,EAmBN,CAACH,MAAD,CAnBM,CAAT;AAsBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAMH,CApCD;;AAsCA,eAAeH,oBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from \"../Shared/components/UIElements/Card\";\n\nimport { useParams } from \"react-router-dom\";\nimport ListingsByUserId from \"./ListingsByUserId\";\n// import \n\nconst EditableUserListings = () => {\n\n    const [loadedUsers, setLoadedUsers] = useState([]);\n\n    const userId = useParams();\n  \n    const userIdString = userId.id\n  \n    useEffect(() => {\n        \n      const fetchUsers = async () => {\n        try {\n          let receivedData = await fetch(`/api/users/${userIdString}`, \n          {\n            method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              }\n          });\n          let responseData = await receivedData.json();\n          setLoadedUsers(responseData.user);\n      } catch (err) {\n          console.log(\"error:\", err);\n      }\n      console.log(\"loadedUsers:\", loadedUsers);\n      };\n      fetchUsers();\n    }, [userId]);\n  \n\n    return (\n        <div>\n            <ListingsByUserId />\n        </div>\n    )\n\n}\n\nexport default EditableUserListings;"]},"metadata":{},"sourceType":"module"}
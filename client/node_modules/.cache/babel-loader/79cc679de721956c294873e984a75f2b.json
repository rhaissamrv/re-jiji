{"ast":null,"code":"var _jsxFileName = \"/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2/evolveu-c6-project-02/client/src/Pages/EditListingsPage.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../Shared/components/context/auth-context'; // import UseFormNewListing from '../components/ListingForm/UseFormNewListing';\n\nimport EditListingForm from '../components/EditAndDeleteListings/EditListingForm';\nimport Card from '../Shared/components/UIElements/Card'; // import './NewListing.css';\n\nconst EditListingsPage = () => {\n  const auth = useContext(AuthContext);\n  const [loading, setLoading] = useState();\n  const [loadedListing, setLoadedListing] = useState();\n  const [saveError, setSaveError] = useState();\n  const listingId = useParams();\n  const listingIdString = listingId.id;\n  console.log('LISTING_ID:', listingIdString);\n  const history = useHistory();\n  useEffect(() => {\n    setLoading(true);\n\n    const fetchListings = async () => {\n      try {\n        let receivedListings = await fetch(`/api/listings/${listingIdString}`, {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        let responseListings = await receivedListings.json();\n        setLoadedListing(responseListings.listings);\n      } catch (err) {\n        console.log(\"error:\", err);\n      }\n\n      setLoading(false);\n    };\n\n    fetchListings();\n  }, [listingIdString]);\n  console.log(\"loadedListing:\", loadedListing);\n\n  const onSave = async newListing => {\n    try {\n      const response = await fetch(`/api/listings/${listingIdString}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newListing)\n      });\n      console.log('Edit response is', response);\n\n      if (response.status === 500) {\n        let errorMessage = await response.text();\n        console.log('We had an error.  it was: ', errorMessage);\n        setSaveError(errorMessage);\n      } else {\n        setSaveError(undefined);\n        history.push(`/user_profile/${auth.userId}`);\n      }\n    } catch (error) {\n      console.error('Fetch failed to reach the server.');\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Card>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(EditListingForm, {\n      onSave: onSave,\n      saveError: saveError,\n      saveButtonCaption: \"Edit Listing\",\n      listing: loadedListing,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    })) // </Card>\n\n  );\n};\n\nexport default EditListingsPage;","map":{"version":3,"sources":["/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2/evolveu-c6-project-02/client/src/Pages/EditListingsPage.js"],"names":["React","useEffect","useState","useContext","useParams","useHistory","AuthContext","EditListingForm","Card","EditListingsPage","auth","loading","setLoading","loadedListing","setLoadedListing","saveError","setSaveError","listingId","listingIdString","id","console","log","history","fetchListings","receivedListings","fetch","method","headers","responseListings","json","listings","err","onSave","newListing","response","body","JSON","stringify","status","errorMessage","text","undefined","push","userId","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAAQC,WAAR,QAA0B,2CAA1B,C,CACA;;AACA,OAAOC,eAAP,MAA4B,qDAA5B;AACA,OAAOC,IAAP,MAAiB,sCAAjB,C,CAEA;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAE3B,QAAMC,IAAI,GAAGP,UAAU,CAACG,WAAD,CAAvB;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AAEA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAmCZ,QAAQ,EAAjD;AAEA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,EAA1C;AAEA,QAAMe,SAAS,GAAGb,SAAS,EAA3B;AAEA,QAAMc,eAAe,GAAGD,SAAS,CAACE,EAAlC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,eAA3B;AAEA,QAAMI,OAAO,GAAGjB,UAAU,EAA1B;AAEEJ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAMW,aAAa,GAAG,YAAY;AAChC,UAAI;AACF,YAAIC,gBAAgB,GAAG,MAAMC,KAAK,CAC/B,iBAAgBP,eAAgB,EADD,EAEhC;AACEQ,UAAAA,MAAM,EAAE,KADV;AAEEC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AAFX,SAFgC,CAAlC;AASA,YAAIC,gBAAgB,GAAG,MAAMJ,gBAAgB,CAACK,IAAjB,EAA7B;AACAf,QAAAA,gBAAgB,CAACc,gBAAgB,CAACE,QAAlB,CAAhB;AACD,OAZD,CAYE,OAAOC,GAAP,EAAY;AACZX,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBU,GAAtB;AACD;;AACDnB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAjBD;;AAkBAW,IAAAA,aAAa;AACd,GArBQ,EAqBN,CAACL,eAAD,CArBM,CAAT;AAuBAE,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,aAA9B;;AAGF,QAAMmB,MAAM,GAAG,MAAOC,UAAP,IAAsB;AACnC,QAAG;AACD,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAE,iBAAgBP,eAAgB,EAAlC,EAAqC;AAC7DQ,QAAAA,MAAM,EAAE,OADqD;AAE7DC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFoD;AAK7DQ,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,UAAf;AALuD,OAArC,CAA5B;AAQAb,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCa,QAAhC;;AACM,UAAIA,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AACzB,YAAIC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAzB;AACApB,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CkB,YAA1C;AACAvB,QAAAA,YAAY,CAACuB,YAAD,CAAZ;AACH,OAJD,MAKK;AACDvB,QAAAA,YAAY,CAACyB,SAAD,CAAZ;AACAnB,QAAAA,OAAO,CAACoB,IAAR,CAAc,iBAAgBhC,IAAI,CAACiC,MAAO,EAA1C;AAEP;AACF,KApBH,CAoBI,OAAOC,KAAP,EAAc;AACVxB,MAAAA,OAAO,CAACwB,KAAR,CAAc,mCAAd;AACH;AACN,GAxBD;;AA0BA;AAAA;AACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,eAAD;AACI,MAAA,MAAM,EAAEZ,MADZ;AAEI,MAAA,SAAS,EAAEjB,SAFf;AAGI,MAAA,iBAAiB,EAAC,cAHtB;AAII,MAAA,OAAO,EAAEF,aAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFF,CAUE;;AAVF;AAaH,CAlFD;;AAmFA,eAAeJ,gBAAf","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {AuthContext} from '../Shared/components/context/auth-context'\n// import UseFormNewListing from '../components/ListingForm/UseFormNewListing';\nimport EditListingForm from '../components/EditAndDeleteListings/EditListingForm'\nimport Card from '../Shared/components/UIElements/Card';\n\n// import './NewListing.css';\n\nconst EditListingsPage = () => {\n\n    const auth = useContext(AuthContext);\n\n    const [loading, setLoading] = useState();\n    \n    const [loadedListing, setLoadedListing]= useState();\n\n    const [saveError, setSaveError] = useState()\n  \n    const listingId = useParams();\n  \n    const listingIdString = listingId.id;\n    console.log('LISTING_ID:', listingIdString)\n    \n    const history = useHistory()\n\n      useEffect(() => {\n        setLoading(true);\n        const fetchListings = async () => {\n          try {\n            let receivedListings = await fetch(\n              `/api/listings/${listingIdString}`,\n              {\n                method: \"GET\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n              }\n            );\n            let responseListings = await receivedListings.json();\n            setLoadedListing(responseListings.listings);\n          } catch (err) {\n            console.log(\"error:\", err);\n          }\n          setLoading(false);\n        };\n        fetchListings();\n      }, [listingIdString]);\n    \n      console.log(\"loadedListing:\", loadedListing)\n\n    \n    const onSave = async (newListing) => {\n      try{\n        const response = await fetch(`/api/listings/${listingIdString}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n          },\n            body: JSON.stringify(newListing)\n        })\n  \n        console.log('Edit response is', response)\n              if (response.status === 500) {\n                  let errorMessage = await response.text()\n                  console.log('We had an error.  it was: ', errorMessage)\n                  setSaveError(errorMessage)\n              }\n              else {\n                  setSaveError(undefined)\n                  history.push(`/user_profile/${auth.userId}`)\n              \n          }\n        } catch (error) {\n              console.error('Fetch failed to reach the server.')\n          }\n    }\n  \n    return (\n      // <Card>\n      <div>\n      <EditListingForm \n          onSave={onSave} \n          saveError={saveError} \n          saveButtonCaption=\"Edit Listing\"\n          listing={loadedListing}\n      />\n      </div>\n      // </Card>\n  )\n\n}\nexport default EditListingsPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2/evolveu-c6-project-02/client/src/components/ListingForm/useFormNewListing.js\";\nimport { useState, useEffect } from 'react';\nimport { AuthContext } from '../../Shared/components/context/auth-context';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst useFormNewListing = ({\n  category,\n  title,\n  description,\n  quantity,\n  location,\n  onSave,\n  saveError,\n  saveButtonCaption\n}) => {\n  const [insertedCategory, setInsertedCategory] = useState(category);\n  const [insertedTitle, setInsertedTitle] = useState(title);\n  const [insertedDescription, setInsertedDescription] = useState(description);\n  const [insertedQuantity, setInsertedQuantity] = useState(quantity);\n  const [insertedLocation, setInsertedLocation] = useState(location); // const auth = useContext(AuthContext);\n\n  const userId = useParams();\n  const userIdString = userId.id;\n  console.log('userIdString', userIdString); // console.log(\"auth._id:\", auth._id )\n\n  const history = useHistory();\n\n  async function onSaveClicked(e) {\n    console.log('Create has been clicked!');\n    let newListing = {\n      category: insertedCategory,\n      title: insertedTitle,\n      //image:'',\n      description: insertedDescription,\n      quantity: insertedQuantity,\n      location: insertedLocation,\n      userId: userIdString\n    };\n    console.log('Creating new listing', newListing);\n    onSave(newListing);\n  }\n\n  const onInputChange = (event, setFunction) => {\n    console.log('Changing input to be ', event.target.value);\n    setFunction(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"listing-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-input\" // type=\"text\"\n    // name=\"category\"\n    ,\n    value: insertedCategory // onChange={handleChange}\n    ,\n    onChange: event => onInputChange(event, setInsertedCategory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Paper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Paper\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Plastic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Plastic\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Electronic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Electronic\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Glass\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Glass\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Metal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Metal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Furniture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Furniture\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Textile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Textile\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Recyclables\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Recyclables\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \"Other\")), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input\",\n    type: \"text\",\n    placeholder: \"Enter a title\",\n    value: insertedCategory // onChange={handleChange}\n    ,\n    onChange: event => onInputChange(event, setInsertedTitle),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-input\",\n    type: \"text\",\n    placeholder: \"Enter a description\",\n    value: insertedDescription // onChange={handleChange}\n    ,\n    onChange: event => onInputChange(event, setInsertedDescription),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), errors.description && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 34\n    }\n  }, errors.description), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input\",\n    type: \"number\",\n    min: \"1\",\n    placeholder: \"Enter a quantity\",\n    value: insertedQuantity // onChange={handleChange}\n    ,\n    onChange: event => onInputChange(event, setInsertedQuantity),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-input\",\n    type: \"text\",\n    placeholder: \"Enter a location\",\n    value: insertedLocation // onChange={handleChange}\n    ,\n    onChange: event => onInputChange(event, setInsertedLocation),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: createSuperheroDataInvalid,\n    onClick: onSaveClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, saveButtonCaption), saveError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 28\n    }\n  }, saveError));\n};\n\n{\n  /* setInsertedCategory\n  setInsertedTitle\n  setInsertedDescription\n  setInsertedQuantity\n  setInsertedLocation\n  history.push(`/user_profile/${userIdString}`)\n  } catch(err) {\n  console.log(err);\n  setError(err.message || 'Something went wrong, please try again.');\n  };\n  // const [values, setValues] = useState({\n  // category: '',\n  // title: '',\n  // // image:'',\n  // description:'',\n  // quantity: '',\n  // location: '',\n  // userId:''\n  // });\n  // const [errors, setErrors] = useState({});\n  // const [isSubmitting, setIsSubmitting] = useState (false);\n  // const [error, setError] = useState(false);\n  // const auth = useContext(AuthContext);\n  const userId = useParams();\n  const userIdString = userId.id;\n  console.log('userIdString', userIdString)\n  // console.log(\"auth._id:\", auth._id )\n  const history = useHistory();\n  //e = events\n  // handleChange =  when you change something, you want to update the value\n  const handleChange = e => {\n  const {name, value} = e.target.value;\n  setValues ({\n  ...values, //spreading the values, targets the name in the formsignup\n  [name]:value\n  });\n  };\n  const handleSubmit = async e => {\n  e.preventDefault();\n  try{\n  const response = await fetch('/api/listings/create_listing', {\n  method: 'POST',\n  body: JSON.stringify({\n     category: values.category,\n     title: values.title,\n     //   image: values.image,\n     description:values.description,\n     quantity: values.quantity,\n     location: values.location,\n     userId: userIdString\n   }),\n   headers: {\n       \"Content-Type\": 'application/json'\n   },\n  });\n      const responseData = await response.json(); //this should be our createUser data from users-controllers\n  if (response.ok) {\n  throw new Error(responseData.message);\n  }\n  setValues\n  console.log(\"responseData\", responseData)\n  history.push(`/user_profile/${userIdString}`)\n  console.log(responseData);\n  } catch(err) {\n  console.log(err);\n  setError(err.message || 'Something went wrong, please try again.');\n  };\n  // setErrors(validate(values));\n  setIsSubmitting (true);\n  };\n  // useEffect(\n  //     () => {\n  //         if(Object.keys(errors).length === 0 && isSubmitting){\n  //             callback();\n  //         }\n  //     },\n  //     [errors]\n  // );\n  return {handleChange, values, handleSubmit, errors}; */\n}\nexport default useFormNewListing;","map":{"version":3,"sources":["/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2/evolveu-c6-project-02/client/src/components/ListingForm/useFormNewListing.js"],"names":["useState","useEffect","AuthContext","useHistory","useParams","useFormNewListing","category","title","description","quantity","location","onSave","saveError","saveButtonCaption","insertedCategory","setInsertedCategory","insertedTitle","setInsertedTitle","insertedDescription","setInsertedDescription","insertedQuantity","setInsertedQuantity","insertedLocation","setInsertedLocation","userId","userIdString","id","console","log","history","onSaveClicked","e","newListing","onInputChange","event","setFunction","target","value","handleSubmit","errors","createSuperheroDataInvalid"],"mappings":"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AA,QAAQ,EAAGY,KAAD,IAAWD,aAAa,CAACC,KAAD,EAAOX,mBAAP,CANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/DF,eA+EE;AAAQ,IAAA,QAAQ,EAAGiB,0BAAnB;AAAgD,IAAA,OAAO,EAAGV,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2EjB,iBAA3E,CA/EF,EAgFMD,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,SAAN,CAhFnB,CADJ;AAwFH,CA9HD;;AAkIU;AAAC;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAgB4D;AAC5D,eAAeP,iBAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport { AuthContext } from '../../Shared/components/context/auth-context';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst useFormNewListing = ({category, title, description, quantity, location, onSave, saveError, saveButtonCaption}) => {\n    const [insertedCategory, setInsertedCategory] = useState(category);\n    const [insertedTitle, setInsertedTitle] = useState(title);\n    const [insertedDescription, setInsertedDescription] = useState(description);\n    const [insertedQuantity, setInsertedQuantity] = useState(quantity);\n    const [insertedLocation, setInsertedLocation] = useState(location);\n    \n    // const auth = useContext(AuthContext);\n    \n    const userId = useParams();\n\n    const userIdString = userId.id;\n    \n    console.log('userIdString', userIdString)\n    // console.log(\"auth._id:\", auth._id )\n    \n    const history = useHistory();\n    \n    async function onSaveClicked(e) {\n        \n        console.log('Create has been clicked!')\n        let newListing = {\n            category: insertedCategory,\n            title: insertedTitle,\n            //image:'',\n            description: insertedDescription,\n            quantity: insertedQuantity,\n            location: insertedLocation,\n            userId: userIdString\n        }\n        console.log('Creating new listing', newListing )\n        onSave(newListing)\n    }\n    const onInputChange = (event, setFunction) => {\n        console.log('Changing input to be ', event.target.value)\n        setFunction(event.target.value);\n    };\n\n    return (\n        <form className=\"listing-form\" onSubmit={handleSubmit}>\n          <label htmlFor=\"category\">Category</label>\n          <select\n            className=\"form-input\"\n            // type=\"text\"\n            // name=\"category\"\n            value={insertedCategory}\n            // onChange={handleChange}\n            onChange={(event) => onInputChange(event,setInsertedCategory)}\n          >\n            <option value=\"Paper\">Paper</option>\n            <option value=\"Plastic\">Plastic</option>\n            <option value=\"Electronic\">Electronic</option>\n            <option value=\"Glass\">Glass</option>\n            <option value=\"Metal\">Metal</option>\n            <option value=\"Furniture\">Furniture</option>\n            <option value=\"Textile\">Textile</option>\n            <option value=\"Recyclables\">Recyclables</option>\n            <option value=\"Other\">Other</option>\n            \n            {/* <ListingCategories id=\"plastic\" displayedCategory=\"Plastic\" />\n            <ListingCategories id=\"electronic\" displayedCategory=\"Electronic\" />\n            <ListingCategories id=\"glass\" displayedCategory=\"Glass\" />\n            <ListingCategories id=\"metal\" displayedCategory=\"Metal\" />\n            <ListingCategories id=\"furniture\" displayedCategory=\"Furniture\" />\n            <ListingCategories id=\"textile\" displayedCategory=\"Textile\" />\n            <ListingCategories id=\"recyclabes\" displayedCategory=\"Recyclables\" />\n            <ListingCategories id=\"other\" displayedCategory=\"Other\" /> */}\n            {/* {errors.category && <p>{errors.category}</p>} */}\n          </select>\n          <label htmlFor=\"title\">Title</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            value={insertedCategory}\n            // onChange={handleChange}\n            onChange={(event) => onInputChange(event,setInsertedTitle)}\n            \n          />\n          {/* {errors.title && <p>{errors.title}</p>} */}\n          <label htmlFor=\"description\">Description</label>\n          <textarea\n            className=\"form-input\"\n            type=\"text\"\n            placeholder=\"Enter a description\"\n            value={insertedDescription}\n            // onChange={handleChange}\n            onChange={(event) => onInputChange(event,setInsertedDescription)}\n          />\n          {errors.description && <p>{errors.description}</p>}\n          <label htmlFor=\"quantity\">Quantity</label>\n          <input\n            className=\"form-input\"\n            type=\"number\"\n            min=\"1\"\n            placeholder=\"Enter a quantity\"\n            value={insertedQuantity}\n            // onChange={handleChange}\n            onChange={(event) => onInputChange(event,setInsertedQuantity)}\n          />\n          {/* {errors.quantity && <p>{errors.quantity}</p>} */}\n          <label htmlFor=\"location\">Location</label>\n          <input\n            className=\"form-input\"\n            type=\"text\"\n            placeholder=\"Enter a location\"\n            value={insertedLocation}\n            // onChange={handleChange}\n            onChange={(event) => onInputChange(event,setInsertedLocation)} />\n          {/*  IMAGE UPLOAD {errors.quantity && <p>{errors.quantity}</p>}\n          <label>Image</label>\n          <input\n            classname=\"form-input\"\n            type=\"file\"\n            placeholder=\"Enter an Image\"\n            onChange={handleChange}\n          /> */}\n          {/* {errors.location && <p>{errors.location}</p>} */}\n          <button disabled={ createSuperheroDataInvalid } onClick={ onSaveClicked }>{saveButtonCaption}</button>\n            { saveError && <div>{saveError}</div> }            \n        {/* </div> */}\n        {/* <button className=\"form-input-btn\" type=\"submit\">\n        //     Add Listing \n        </button>  */}\n        </form>\n    )\n}\n\n         \n    \n          {/* setInsertedCategory\n          setInsertedTitle\n          setInsertedDescription\n          setInsertedQuantity\n          setInsertedLocation\n\n          history.push(`/user_profile/${userIdString}`)\n    } catch(err) {\n        console.log(err);\n        setError(err.message || 'Something went wrong, please try again.');\n    };\n\n\n\n    // const [values, setValues] = useState({\n    // category: '',\n    // title: '',\n    // // image:'',\n    // description:'',\n    // quantity: '',\n    // location: '',\n    // userId:''\n// });\n// const [errors, setErrors] = useState({});\n// const [isSubmitting, setIsSubmitting] = useState (false);\n// const [error, setError] = useState(false);\n\n// const auth = useContext(AuthContext);\nconst userId = useParams();\n\nconst userIdString = userId.id;\n\nconsole.log('userIdString', userIdString)\n// console.log(\"auth._id:\", auth._id )\n\nconst history = useHistory();\n\n//e = events\n// handleChange =  when you change something, you want to update the value\n\nconst handleChange = e => {\n    const {name, value} = e.target.value;\n    setValues ({\n        ...values, //spreading the values, targets the name in the formsignup\n        [name]:value\n    });\n};\n\nconst handleSubmit = async e => {\n    e.preventDefault();\n    try{\n      const response = await fetch('/api/listings/create_listing', {\n          method: 'POST',\n          body: JSON.stringify({\n              category: values.category,\n              title: values.title,\n              //   image: values.image,\n              description:values.description,\n              quantity: values.quantity,\n              location: values.location,\n              userId: userIdString\n            }),\n            headers: {\n                \"Content-Type\": 'application/json'\n            },\n        });\n        \n      const responseData = await response.json(); //this should be our createUser data from users-controllers\n      if (response.ok) {\n          throw new Error(responseData.message);\n\n      }\n      setValues\n      console.log(\"responseData\", responseData)\n      history.push(`/user_profile/${userIdString}`)\n\n      console.log(responseData);\n    } catch(err) {\n        console.log(err);\n        setError(err.message || 'Something went wrong, please try again.');\n    };\n\n    // setErrors(validate(values));\n    setIsSubmitting (true);\n};\n    // useEffect(\n    //     () => {\n    //         if(Object.keys(errors).length === 0 && isSubmitting){\n    //             callback();\n    //         }\n    //     },\n    //     [errors]\n    // );\n    \n    return {handleChange, values, handleSubmit, errors}; */}\nexport default useFormNewListing;\n\n"]},"metadata":{},"sourceType":"module"}
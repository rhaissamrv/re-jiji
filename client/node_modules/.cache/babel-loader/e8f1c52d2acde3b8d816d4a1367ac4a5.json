{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { AuthContext } from '../../Shared/components/context/auth-context';\n\nconst useFormNewListing = (callback, validate) => {\n  const [values, setValues] = useState({\n    category: '',\n    title: '',\n    image: '',\n    description: '',\n    quantity: '',\n    location: '',\n    userId: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(false); // const auth = useContext(AuthContext);\n  //e = events\n  // handleChange =  when you change something, you want to update the value\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      //spreading the values, targets the name in the formsignup\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('api/listings/create_listing', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": 'application/json'\n        },\n        body: JSON.stringify({\n          category: values.category,\n          title: values.title,\n          //   image: values.image,\n          description: values.description,\n          quantity: values.quantity,\n          location: values.location //   userId: auth.login\n\n        })\n      });\n      const responseData = await response.json(); //this should be our createUser data from users-controllers\n\n      if (response.ok) {\n        throw new Error(responseData.message);\n      }\n\n      console.log(responseData);\n    } catch (err) {\n      console.log(err);\n      setError(err.message || 'Something went wrong, please try again.');\n    }\n\n    ; // setErrors(validate(values));\n\n    setIsSubmitting(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    values,\n    handleSubmit,\n    errors\n  };\n};\n\nexport default useFormNewListing;","map":{"version":3,"sources":["/home/rhaissa/Documents/Documents/Learning how to code/1. EvolveU/1. Projects/EvolveU_Project_2/evolveu-c6-project-02/client/src/components/ListingForm/useFormNewListing.js"],"names":["useState","useEffect","AuthContext","useFormNewListing","callback","validate","values","setValues","category","title","image","description","quantity","location","userId","errors","setErrors","isSubmitting","setIsSubmitting","error","setError","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","responseData","json","ok","Error","message","console","log","err","Object","keys","length"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,WAAT,QAA4B,8CAA5B;;AAGA,MAAMC,iBAAiB,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAChD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC;AACnCQ,IAAAA,QAAQ,EAAE,EADyB;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,KAAK,EAAC,EAH6B;AAInCC,IAAAA,WAAW,EAAC,EAJuB;AAKnCC,IAAAA,QAAQ,EAAE,EALyB;AAMnCC,IAAAA,QAAQ,EAAE,EANyB;AAOnCC,IAAAA,MAAM,EAAC;AAP4B,GAAD,CAApC;AASF,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAE,KAAF,CAAhD;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,KAAD,CAAlC,CAZkD,CAclD;AAEA;AACA;;AAEA,QAAMqB,YAAY,GAAGC,CAAC,IAAI;AACtB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAlB,IAAAA,SAAS,CAAE,EACP,GAAGD,MADI;AACI;AACX,OAACiB,IAAD,GAAOC;AAFA,KAAF,CAAT;AAIH,GAND;;AAQA,QAAME,YAAY,GAAG,MAAMJ,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAG;AACD,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgC;AACxDC,QAAAA,MAAM,EAAE,MADgD;AAExDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF+C;AAKxDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB1B,UAAAA,QAAQ,EAAEF,MAAM,CAACE,QADA;AAEjBC,UAAAA,KAAK,EAAEH,MAAM,CAACG,KAFG;AAGnB;AACEE,UAAAA,WAAW,EAACL,MAAM,CAACK,WAJF;AAKjBC,UAAAA,QAAQ,EAAEN,MAAM,CAACM,QALA;AAMjBC,UAAAA,QAAQ,EAAEP,MAAM,CAACO,QANA,CAOnB;;AAPmB,SAAf;AALkD,OAAhC,CAA5B;AAgBA,YAAMsB,YAAY,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAA3B,CAjBC,CAiB2C;;AAC5C,UAAIR,QAAQ,CAACS,EAAb,EAAiB;AACb,cAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;AAEH;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACD,KAvBD,CAuBE,OAAMO,GAAN,EAAW;AACTF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAtB,MAAAA,QAAQ,CAACsB,GAAG,CAACH,OAAJ,IAAe,yCAAhB,CAAR;AACH;;AAAA,KA5B2B,CA8B5B;;AACArB,IAAAA,eAAe,CAAE,IAAF,CAAf;AACH,GAhCD;;AAiCIjB,EAAAA,SAAS,CACL,MAAM;AACF,QAAG0C,MAAM,CAACC,IAAP,CAAY7B,MAAZ,EAAoB8B,MAApB,KAA+B,CAA/B,IAAoC5B,YAAvC,EAAoD;AAChDb,MAAAA,QAAQ;AACX;AACJ,GALI,EAML,CAACW,MAAD,CANK,CAAT;AASA,SAAO;AAACM,IAAAA,YAAD;AAAef,IAAAA,MAAf;AAAuBoB,IAAAA,YAAvB;AAAqCX,IAAAA;AAArC,GAAP;AACH,CAtED;;AAwEA,eAAeZ,iBAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport { AuthContext } from '../../Shared/components/context/auth-context';\n\n\nconst useFormNewListing = (callback, validate) => {\n  const [values, setValues] = useState({\n    category: '',\n    title: '',\n    image:'',\n    description:'',\n    quantity: '',\n    location: '',\n    userId:''\n});\nconst [errors, setErrors] = useState({});\nconst [isSubmitting, setIsSubmitting] = useState (false);\nconst [error, setError] = useState(false);\n\n// const auth = useContext(AuthContext);\n\n//e = events\n// handleChange =  when you change something, you want to update the value\n\nconst handleChange = e => {\n    const {name, value} = e.target;\n    setValues ({\n        ...values, //spreading the values, targets the name in the formsignup\n        [name]:value\n    });\n};\n\nconst handleSubmit = async e => {\n    e.preventDefault();\n    try{\n      const response = await fetch('api/listings/create_listing', {\n          method: 'POST',\n          headers: {\n              \"Content-Type\": 'application/json'\n          },\n          body: JSON.stringify({\n              category: values.category,\n              title: values.title,\n            //   image: values.image,\n              description:values.description,\n              quantity: values.quantity,\n              location: values.location,\n            //   userId: auth.login\n          })\n      });\n\n      const responseData = await response.json(); //this should be our createUser data from users-controllers\n      if (response.ok) {\n          throw new Error(responseData.message);\n\n      }\n      console.log(responseData);\n    } catch(err) {\n        console.log(err);\n        setError(err.message || 'Something went wrong, please try again.');\n    };\n\n    // setErrors(validate(values));\n    setIsSubmitting (true);\n};\n    useEffect(\n        () => {\n            if(Object.keys(errors).length === 0 && isSubmitting){\n                callback();\n            }\n        },\n        [errors]\n    );\n    \n    return {handleChange, values, handleSubmit, errors};\n};\n\nexport default useFormNewListing;\n"]},"metadata":{},"sourceType":"module"}